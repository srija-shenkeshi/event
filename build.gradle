plugins {
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
}

group = 'com.modeeleven'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'


repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'javax.validation:validation-api:2.0.1.Final'
	implementation 'org.hibernate:hibernate-validator:6.2.0.Final'
}

tasks.named('test') {
	useJUnitPlatform()
}

ext {
	jacocoExcludes = [
			'**/com/calendar/**/model/**'
	]
}

jacocoTestReport {
	reports {
		html.required = true
		xml.required = true
	}
	afterEvaluate {
		excludedClassFilesForReport(classDirectories)
	}
}

jacocoTestCoverageVerification {
	afterEvaluate {
		excludedClassFilesForReport(classDirectories)
	}

	violationRules {
		rule {
			limit {
				counter = 'INSTRUCTION'
				value = 'COVEREDRATIO'
				minimum = 0.10
			}
		}
	}
}

private excludedClassFilesForReport(classDirectories) {
	classDirectories.setFrom(files(classDirectories.files.collect {
		fileTree(dir: it,
				exclude: jacocoExcludes
		)
	}))
}

jacoco {
	toolVersion = "0.8.8"
}

check.dependsOn jacocoTestCoverageVerification
jacocoTestCoverageVerification.dependsOn jacocoTestReport
